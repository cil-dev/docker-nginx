#user  nobody;
#Defines which Linux system user will own and run the Nginx server

worker_processes  1;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.

error_log  /logs/error.log debug; #error_log  logs/error.log  notice;
#Specifies the file where server logs.

pid        /logs/nginx.pid;
#nginx will write its master process ID(PID).

events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value:
    # max_clients = worker_processes * worker_connections
}


http {
    include       mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

    default_type  application/octet-stream;
    #

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    error_log  /logs/error.log;
#    access_log  /logs/access.log;
    access_log  off;
#    disable_symlinks off;

    sendfile        on;
    # If serving locally stored static files, sendfile is essential to speed up the server,
    # But if using as reverse proxy one can deactivate it
    
    #tcp_nopush     on;
    # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

    #keepalive_timeout  0;
    keepalive_timeout  65;
    # timeout during which a keep-alive client connection will stay open.


	server {
	    listen 80;
	    listen [::]:80;
	    server_name cildev.net www.cildev.net; 
	    return 301 https://cildev.net$request_uri;
	}


    server {
	    listen              443 ssl;
	    server_name         cildev.net;
	    ssl_certificate     /ssl/bundle.crt;
	    ssl_certificate_key /ssl/cildev.key;
	    ssl_protocols       TLSv1.2;
	    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384';
	    ssl_prefer_server_ciphers on;
	    ssl_stapling on;
		ssl_stapling_verify on;      
        server_name  cildev.net;


        gzip on;
        gzip_buffers 16 8k;
#        gzip_comp_level 1;
        gzip_http_version 1.1;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
        gzip_vary on;
        gzip_proxied any; # Compression for all requests.
        ## No need for regexps. See
        ## http://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
        gzip_disable msie6;

        proxy_read_timeout 600s;

        location / {
            #The location setting lets you configure how nginx responds to requests for resources within the server.
            root   /public;
            index  index.html index.htm index.php;
        }

        location ~ \.php$ {
#            try_files $uri =404;
#            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass fpm:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME /public$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        location ~* /bb_api/(.*) {
            resolver 127.0.0.11;
            set $bb_api bb_api;
        	proxy_pass http://$bb_api:8082/$1$is_args$args;
        }


        location ~* /yii/([0-z_\-]+)/ {
            index  index.html index.php;
            try_files $uri $uri/ /yii/$1/index.php$is_args$args;
        }
    }

}
